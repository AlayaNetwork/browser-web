import enLocale from 'element-ui/lib/locale/lang/en'
export default {
    menu: { // 菜单
        home: 'HOME',
        block: 'BLOCK',
        transaction: 'TRANSACTIONS',
        validator: 'VALIDATORS',
        proposal: 'PROPOSALS',
        comesoon: 'Coming soon',
        goole: 'Google reCAPTCHA is not available!'
    },
    search: {
        searchBtn: 'Search',
        placeHolder: 'Search by block/Address/Block hash/Txn hash'
    },
    footer: {
        desc: 'PlatScan is a Block Explorer and Analytics Platform for PlatON',
        links: 'Links',
        help: 'Help',
        wallet: 'Wallet',
        officialWebsite: 'PlatON Official Website',
        whitePaper: 'White Paper',
        community: 'Community'
    },
    common: {
        time: 'Time',
        serialnumber: 'N.',
        export: 'Download csv',
    },
    tradeAbout: {
        foundTransactions: 'Transactions Found',
        showingLast: '(Showing The Last 500k Records)',
        transactionUp: 'TRANSACTIONS',
        tradeDetail: 'TRANSACTION DETAILS',
        morethen: 'More Than',
        status: 'Status',
        txhash: 'Txhash',
        timeStamp: 'TimeStamp',
        blockHeight: 'Block Height',
        gasLimit: 'Gas Limit',
        gasUsed: 'Gas Used',
        gasPrice: 'Gas Price',
        rawData: 'Raw Data',

        sender: 'Sender',
        recipient: 'Recipient',
        amount: 'Amount',
        transactionFee: 'Transaction Fee',

        restrictedAccount: 'Restricted Account',
        restrictedAmount: 'Restricted Amount',
        restrictedPlan: 'Restricted Plan',

        delegator: 'Delegator',
        validator: 'Validator',
        delegationAmount: 'Delegation Amount',
        withdrawal: 'Withdrawal Amount',

        proposer: 'Proposer',
        operatorAddress: 'Operator Address',
        proposalType: 'Proposal Type',
        proposalID: 'Proposal ID',
        PIPSN: 'PIP SN',
        proposalTitle: 'Proposal Title',
        vote: 'Vote',
        version: 'Version',
        version1: 'Version',

        identity: 'Identity',
        rewardAddress: 'Reward Address',
        website: 'Website',
        introduction: 'Introduction',
        stakeAmount: 'Stake Amount',
        returnAmount: 'Return Amount',
        reporter: 'Reporter',
        reportType: 'Report Type',
        doubleSiging: 'Double Siging',
        reportEvidence: 'ReportEvidence',
        reportResult: 'ReportResult',
        reportReward: 'Report Reward',
        returnBlock: 'Return Block',

        transactions: 'Transactions',
        transactions1: 'Transactions Found',
        record: 'Showing The Last 500k Records',
        hash: 'TxHash',
        block: 'Block',
        age: 'Age',
        from: 'From',
        to: 'To',
        toA: 'Recipient',
        value: 'Value',
        fee: 'TxFee(LAT)',
        before: 'ago',
        txInfo: 'Tx Info',
        viewLeft: 'View the previous transaction',
        viewRight: 'View the latter transaction',
        transfer: 'Transfer',
        other: 'ContractCreation\\ContractExecution\\MPCTx\\Others',
        restricting: 'CreateRestricting',
        delegate: 'Delegate',
        undelegate: 'Undelegate',
        proposal: 'CreateProposal',
        voting: 'VotingProposal',
        declare: 'DeclareVersion',
        createValidator: 'CreateValidator',
        increase: 'IncreaseStaking',
        editValidator: 'EditValidator',
        exitValidator: 'ExitValidator',
        reportValidator: 'ReportValidator',
        pend: 'Pending',
        remain: 'Remaining',
        undelegat: 'Undelegating',
        remain1: 'Remaining',
        successed: 'Successed',
        successed1: 'Successed',
        information: 'Information', //Transaction 
        timestamp: 'Time Stamp',
        txReceiptStatus: 'TxReceipt Status',
        actualTxCost: 'Tx Cost/Fee',
        energonLimit: 'Energon Limit',
        energonUsed: 'Energon Used By Transaction',
        energonPrice: 'Energon Price',
        inputData: 'Input Date',
        confirmNum: 'Block Confirmations',
        success: 'Success',
        fail: 'Fail',
        type: 'Type',
        voteStaked: 'Vote Staked',
        votefor: 'Vote for',
        tickets: 'Tickets',
        reduction: 'Reduction',
        withdraw: 'Withdraw',
        tradein: '{count} Transactions Found',
        moretradein: 'More than > {count} Transactions Found',
        warn: 'Warning'
    },
    contract: {
        contractDetail: 'CONTRACT DETAILS',
        contract: 'Contract',
        overview: 'Overview',
        balance: 'Balance',
        others: 'Others',
        totxn: 'at txn',
        contractName: 'Contract Name',
        transactions: 'Transactions',
        contractCreator: 'Contract Creator',
        showingLast: '(Showing The Last 5k Records)',
        all: 'All',
        delegationsTxns: 'Delegations Txns',
        transfers: 'Transfers',
        validatorTxns: 'Validator Txns',
        governanceTxns: 'Governance Txns',

        addressDetail: 'ADDRESS DETAILS',
        restricted: 'Restricted',
        Address: 'Address',
        delegations: 'Delegations',
        staking: 'Staking',
        inRedemption: 'In redemption',

        restrictedBalance: 'Restricted Balance',
        forDelegations: 'For Delegations\\Staking',
        slash: 'Slash',
        debt: 'Debt',
        totalRestricted: 'Total Restricted',
        released: 'Released',
        epoch: 'Epoch',
        estimatedTime: 'Estimated Time',
        unlocksNumber: 'Released'
    },
    deleget: {
        validators: 'Validators',
        lockedDelegate: 'Locked Delegate',
        unlockedDelegate: 'Unlocked Delegate',
        releasedDelegate: 'Released Delegate',
        undelegating: 'Undelegating',
        unlocked: 'Unlocked',
        released: 'Released',
        delegationAmount: 'Delegation Amount',
        locked: 'Locked',
        percentage: 'Percentage',
        delegations: 'Delegations',
        delegators: 'Delegators',
    },
    blockAbout: {
        morethen: 'Total ',
        blockH: 'Block',
        block: 'block',
        interval: 'Age',
        blockReward: 'Block Reward',
        size: 'Size',
        producer: 'Producer',
        blockHash: 'Block Hash',
        parentHash: 'Parent Hash',
        extraData: 'Extra Data',
        blockDetail: 'BLOCK DETAILS',
        blockInformation: 'Block Information',
        operatorAddress: 'Operator_Address',
        lookNext: 'Look at the next block',
        lookLast: 'Look at the last block',
    },
    download: {
        info: 'Download Data',
        downloadAddressMsg: 'Download the current address of the transaction ,Before downloading, please verify if you are a robot!',
        downloadNodeMsg: 'Download current node block record,Before downloading, please verify if you are a robot!',
        date: 'Date Date',
        placeholder: 'Select a date',
        download: 'Download',
        placeholder1: 'Please select date',
        robot: 'Please verify that you are a robot!',

        googleAPINotAvailable: 'Google reCAPTCHA is not available！',
        downloadTip: '(Up to support 30,000 data downloads)',
        dataDate: 'Data Date',
        today: '-Today',
        mostDownloads: '(Up to support 30,000 data downloads)'
    },
    modalInfo: {
        copysuccess: 'Copied',
        copyfail: 'Copy the failure'
    },
    breadCrumb: {
        pending: 'Pending Transactions',
        trade: 'Transactions',
        block: 'Blocks',
        node: 'Node'
    },
    indexInfo: {
        WelcomeToPlatON: 'Welcome to PlatON Blockchain Explorer',
        LIVEBLOCKTIME: 'LIVE BLOCK TIME',
        LIVEBLOCKTRANSACTIONS: 'LIVE BLOCK TRANSACTIONS',
        LIVEBLOCKHEIGHT: 'LIVE BLOCK HEIGHT',
        CIRCULATINGSUPPLY: 'CIRCULATING SUPPLY',
        LIVETRANSACTIONS: 'LIVE TRANSACTIONS',
        CURRNTMAXTPS: 'CURRNT/MAX TPS',
        LIVEADDRESS: 'LIVE ADDRESS',
        PENDINGTOTAL: 'PENDING/TOTAL PROPOSALS',
        currentValidators: 'Current Round of Validators',
        viewAll: 'View all ',

        txn: 'Txn',
        txns: 'Txns',
        searchno: 'Search no results!',

        resource: 'RESOURCE',
        aboutPlatON: 'About PlatON',
        platONWhitePaper: 'PlatON White Paper',
        atonDownload: 'ATON Download',
        developer: 'Developer',
        platScan: 'PlatScan is a Block Explorer and Analytics Platform for PlatON',
        international: 'COPYRIGHT © 2018 PLATON INTERNATIONAL LIMITED ALL RIGHTS RESERVED.',
    },
    elseInfo: {
        hour: 'h ',
        minutes: 'm ',
        seconds: 's ',
        day: 'd ',
    },
    nodeInfo: {
        validator: 'validator',
        validatorDetail: 'VALIDATOR DETAILS',
        createdat: 'Created at',
        electedRoundValidator: 'Elected Round Validator',
        blocks: 'Blocks',
        blockRate: 'Block Rate',
        totalStakePower: 'Total Stake\\Power',
        totalReward: 'Total Reward',
        yield: 'Yield',
        stability: 'Stability',
        selfstake: 'Self-stake',
        nodeInfo: 'Node Info',
        producedBlocks: 'Produced Blocks',
        validatorActions: 'Validator Actions',
        lowBlockRate: 'Low block rate slashing',
        twoSignNum: 'Double signing slashing',

        nodeID: 'Node ID',
        actions: 'Actions',
        inBlock: 'Block',
        inTxHash: 'TxHash',

        liveStakingInfo: 'LIVE STAKING INFO',
        currentPeriodReward: 'CURRENT PERIOD REWARD',
        nextEpoch: 'NEXT EPOCH',
        totalDelegations: 'Total Delegations',
        stakeRate: 'Stake Rate',
        stakingReward: 'Staking reward',
        nextRewardAdjustment: 'Next reward adjustment',
        updateEpoch: 'Update validator status once per epoch',

        searchValidator: 'Search by Validator Name',
        historicalValidators: 'Historical Validators',
        rank: 'Rank',
        validatorName: 'Validator Name',
        delegationsDelegators: 'Delegations\\Delegators',
        producedBlock: 'Blocks',
        exitTime: 'Exit time',
        pendingDelegations: 'Pending Delegations',
        nodeMsg: 'PlatON blockchain initial built-in validator, does not accept Delegation',
        systemBuilt: 'System built-in reward pool account',
        systemOperation: 'System operation, no txn',
        node: 'Node',

    },
    nodeStatus: {
        1: 'Candidate',
        2: 'Active',
        3: 'Producing…',
        4: 'Exiting',
        5: 'Exited',
    },
    // 交易类型
    TxType: {
        0: 'Transfer',  //'转账',
        1: 'Create Proposal',   //'创建提案',
        2: 'Contract Execution', //'合约执行',
        5: 'MPCTx', //'MPC交易',
        1000: 'Create Validator',   //'发起质押',
        1001: 'Edit Validator',   //'修改质押信息',
        1002: 'Increase Staking',   //'增持质押',
        1003: 'Exit Validator',   //'撤销质押',
        1004: 'Delegate',   //'发起委托',
        1005: 'Undelegate',   //'减持/撤销委托',
        2000: 'Create Proposal',   //'提交文本提案',
        2001: 'Create Proposal',    //'提交升级提案',
        2002: 'Create Proposal',   //'提交参数提案',
        2003: 'Voting Proposal',    //'提案投票',
        2004: 'Declare Version',    //'版本声明',
        2005: 'Cancel Proposal',    //取消提案
        3000: 'Report Validator',   //'举报多签',
        4000: 'Create Restricting', //'创建锁仓计划'
    },
    // 创建提案的提案类型
    createType: {
        2000: 'Text Proposal',   //文本提案
        2001: 'Upgrade Proposal',   //升级提案
        2002: 'Parameter Proposal',   //参数提案
        2005: 'Cancel Proposal'    //取消提案
    },
    // 提案投票的提案类型
    proposalOption: {
        1: 'Text Proposal',  //文本提案
        2: 'Upgrade Proposal',  //升级提案
        3: 'Parameter Proposal',  //参数提案
    },
    ...enLocale
}
