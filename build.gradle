plugins {
  id 'org.hidetake.ssh' version '2.10.1'
  id "github.com.sakamotodesu.jcifs" version "0.2.2"
}
apply plugin: 'distribution'

project.setBuildDir(file(projectDir.absolutePath+'/release'))
distributions {
  monitor {
    distributionBaseName.set(project.name)
    contents {
      from { 'dist' }
    }
  }
}

def shortCommitId = 'git log -1 --pretty=%h'.execute([], project.rootDir).text.trim()
version "$projectVersion-$shortCommitId"
def packageName = "${project.name}-$version"

remotes {
  webServer {
    host = "$deployServerHost"
    user = "$deployServerUser"
    port = Integer.parseInt("$deployServerPort")
    password = "$deployServerPassword"
  }
}

task buildWeb(type:Exec,group: 'build'){
  workingDir '.'
  if (System.properties.getProperty('os.name').toLowerCase().contains('windows')) {
    commandLine 'cmd','/c','npm clean'
    commandLine 'cmd','/c','npm run build'
  } else {
    commandLine 'npm','clean'
    commandLine 'npm','run build'
  }
}

distZip.enabled=false

monitorDistTar.dependsOn 'buildWeb'
monitorDistTar.compression = Compression.GZIP
monitorDistTar.archiveExtension.set('tar.gz')

// 拷包到测试环境
def deployDir = "$deployRootDir/${projectVersion}/${project.name}-test"
task deployToTestEnv(dependsOn:['build'],group: 'deploy') {
  doLast {
    ssh.settings {
      knownHosts = allowAnyHosts
      pty = true
    }
    ssh.run {
      session(remotes.webServer) {
        execute "mkdir -p $deployDir && rm -rf $deployDir/*"
        put from: "${buildDir}/distributions/${packageName}.tar.gz", into: "$deployDir"
        execute "cd $deployDir && tar -xvf ${packageName}.tar.gz && mv ${packageName}/* . && rm -rf ${packageName}"
      }
    }
  }
}

def parentDir = 'scan-web'
def destDir = "${projectVersion}"+'-'+new Date().format("yyyy.MM.dd.HHmm")
task releaseToCifs(type: github.com.sakamotodesu.JcifsCopy,dependsOn:['build'],group: 'release') {
  from "${buildDir}/distributions/${packageName}.tar.gz"
  into "smb://${publishServerUser}:${publishServerPassword}@${publishServerHost}/proupdate/alaya/scan/${parentDir}/${destDir}/"
}
